# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Push a new dev build to Slack"
  lane :dev do
    file_name = "../../.env"
    file_url = "https://raw.githubusercontent.com/bithyve/bitcoin-keeper-envs/development/app.development.env"
    auth_header = "Authorization: token #{ENV["GITHUB_ACCESS_TOKEN"]}"
    sh(
      "curl -H '#{auth_header}' -o '#{file_name}' -s '#{file_url}'",
      step_name: "curl -H '***' -o '#{file_name}' -s '#{file_url}'"
    )
    store_password = ENV["STORE_PASSWORD"]
    key_password = ENV["KEY_PASSWORD"]
    key_alias = ENV["KEY_ALIAS"]
    releaseFilePath = File.join(Dir.pwd, "../app", "debug.keystore")

    bump_version_code()

    gradle(task: 'clean')
    
    gradle(
      task: 'assemble',
      build_type: 'developmentRelease',
      print_command: false,
      properties: {
        "android.injected.signing.store.file" => releaseFilePath,
        "android.injected.signing.store.password" => store_password,
        "android.injected.signing.key.alias" => key_alias,
        "android.injected.signing.key.password" => key_password,
      }
    )
  end

  desc "Push a new live build to Slack and internal track on Play Store"
  lane :live do
    file_name = "../../.env"
    file_url = "https://raw.githubusercontent.com/bithyve/bitcoin-keeper-envs/live/app.live.env"
    auth_header = "Authorization: token #{ENV["GITHUB_ACCESS_TOKEN"]}"
    sh(
      "curl -H '#{auth_header}' -o '#{file_name}' -s '#{file_url}'",
      step_name: "curl -H '***' -o '#{file_name}' -s '#{file_url}'"
    )
    store_password = ENV["STORE_PASSWORD"]
    key_password = ENV["KEY_PASSWORD"]
    key_alias = ENV["KEY_ALIAS"]
    releaseFilePath = File.join(Dir.pwd, "../app", "release.keystore")
    gradle(task: 'clean')
    gradle(
      task: 'bundle',
      build_type: 'productionRelease',
      print_command: false,
      properties: {
        "android.injected.signing.store.file" => releaseFilePath,
        "android.injected.signing.store.password" => store_password,
        "android.injected.signing.key.alias" => key_alias,
        "android.injected.signing.key.password" => key_password,
      }
    )
    upload_to_play_store(
      track: 'internal'
    )
    gradle(
      task: 'assemble',
      build_type: 'productionRelease',
      print_command: false,
      properties: {
        "android.injected.signing.store.file" => releaseFilePath,
        "android.injected.signing.store.password" => store_password,
        "android.injected.signing.key.alias" => key_alias,
        "android.injected.signing.key.password" => key_password,
      }
    )
  end
end


after_all do |lane|
  versionCode = android_get_version_code()
  slack(message: "Build success :rocket:\nVersion Code: " + versionCode.to_s)
  end

  error do |lane, exception|
    slack(
      message: exception.message,
      success:false
    )
  end

lane :bump_version_code do
  path = '../app/build.gradle'
  re = /versionCode\s+(\d+)/ 

  s = File.read(path)
  versionCode = s[re, 1].to_i
  s[re, 1] = (versionCode + 1).to_s

  f = File.new(path, 'w')
  f.write(s)
  f.close
end
