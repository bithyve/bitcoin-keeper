# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Push a new dev build to TestFlight"
  lane :dev do
    file_name = "../../.env"
    file_url = "https://raw.githubusercontent.com/bithyve/bitcoin-keeper-envs/development/app.development.env"
    auth_header = "Authorization: token #{ENV["GITHUB_ACCESS_TOKEN"]}"
    sh(
      "curl -H '#{auth_header}' -o '#{file_name}' -s '#{file_url}'",
      step_name: "curl -H '***' -o '#{file_name}' -s '#{file_url}'"
    )

    increment_build_number(xcodeproj: "hexa_keeper.xcodeproj")

    get_certificates( # Create or get certificate, and install it
      development: true,
      output_path: "./builds" # Download certificate in the build folder (you don't need to create the folder)
    )

    get_provisioning_profile( # Create or get provisioning profile
      output_path: "./builds",  # Download provisioning profile in the build folder
      filename: "provisioning.mobileprovision" # Rename the local provisioning profile
    )

    update_project_provisioning( # Set the project provisioning profile (related in Xcode to the General > Signing Release section)
      xcodeproj: "hexa_keeper.xcodeproj",
      target_filter: "hexa_keeper", # Name of your project
      profile: "./builds/provisioning.mobileprovision",
      build_configuration: "Release"
    )

    update_project_team( # Set the right team on your project
      teamid: CredentialsManager::AppfileConfig.try_fetch_value(:team_id)
    )

    build_app(workspace: "hexa_keeper.xcworkspace", scheme: "hexa_keeper_dev", clean: true,
    export_method: "app-store",
    export_options: {
      provisioningProfiles: {
          CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier) => CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier) + " AppStore" # Value of this parameter is the name of the Provisioning Profile. By default, it will be "{bundleId} AppStore"
      }
    },
    build_path: "./builds",
    output_directory: "./builds")
    upload_to_testflight
  end

  desc "Push a new live build to TestFlight"
  lane :live do
    file_name = "../../.env"
    file_url = "https://raw.githubusercontent.com/bithyve/bitcoin-keeper-envs/live/app.live.env"
    auth_header = "Authorization: token #{ENV["GITHUB_ACCESS_TOKEN"]}"
    sh(
      "curl -H '#{auth_header}' -o '#{file_name}' -s '#{file_url}'",
      step_name: "curl -H '***' -o '#{file_name}' -s '#{file_url}'"
    )
    # increment_build_number(xcodeproj: "hexa_keeper.xcodeproj")

    get_certificates( # Create or get certificate, and install it
      output_path: "./builds" # Download certificate in the build folder (you don't need to create the folder)
    )

    get_provisioning_profile( # Create or get provisioning profile
      output_path: "./builds",  # Download provisioning profile in the build folder
      filename: "Keeper_Distribution.mobileprovision" # Rename the local provisioning profile
    )

    update_project_provisioning( # Set the project provisioning profile (related in Xcode to the General > Signing Release section)
      xcodeproj: "hexa_keeper.xcodeproj",
      target_filter: "hexa_keeper", # Name of your project
      profile: "./builds/Keeper_Distribution.mobileprovision",
      build_configuration: "Release"
    )

    update_project_team( # Set the right team on your project
      teamid: CredentialsManager::AppfileConfig.try_fetch_value(:team_id)
    )

    build_app(workspace: "hexa_keeper.xcworkspace", scheme: "hexa_keeper", clean: true,
    export_method: "app-store",
    export_options: {
      provisioningProfiles: {
          CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier) => CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier) + " AppStore" # Value of this parameter is the name of the Provisioning Profile. By default, it will be "{bundleId} AppStore"
      }
    },
    build_path: "./builds",
    output_directory: "./builds")
    upload_to_testflight
  end
end

after_all do |lane|
  slack(message: "Build success :rocket:")
  end

  error do |lane, exception|
    slack(
      message: exception.message,
      success:false
    )
  end
